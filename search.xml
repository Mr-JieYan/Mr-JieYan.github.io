<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Yearning数据库审计平台</title>
    <url>/Yearning%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%A1%E8%AE%A1%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p><strong>部分开发有上正式库查询数据排查问题的需求，正式环境的数据库不太适合透露外网端口提供给开发用图形工具进行访问，用openvpn连到内网再用图形工具进行访问的话，又会导致vpn的证书管理困难（虽然vpn访问内网也做了安全组限制）开放了太多的权限给开发，造成安全隐患，所以打算采用Yearning数据库审计平台+ip白名单的方式解决此问题。</strong></p>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>Yearning 不依赖于任何第三方SQL审核工具作为审核引擎,内部已自己实现审核/回滚相关逻辑。<br>仅依赖Mysql数据库。<br><code>mysql版本必须5.7及以上版本</code>请事先自行安装完毕且<code>创建Yearning库,字符集应为UTF-8/UTF8mb4 (仅Yearning所需mysql版本)</code><br>Yearning日志仅输出error级别,没有日志即可认为无运行错误！<br>Yearning 基于1080p分辨率开发仅支持1080p及以上显示器访问<br>由于使用较多新的前端技术栈,请使用Chrome最新版本(不包括360等其他魔改版本)</p>
<h4 id="安装msyql"><a href="#安装msyql" class="headerlink" title="安装msyql"></a>安装msyql</h4><p>下载yum源安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">yum -y install mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>启动对应版本的源，此处注释掉mysql8</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/mysql-community.repo    </span><br><span class="line">yum repolist all | grep mysql</span><br><span class="line">yum install mysql-community-server </span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">修改一下mysql的data目录</span><br><span class="line">```dsconfig</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">	datadir=/data/mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure>

<p>查看密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep -i password /var/log/mysqld.log</span><br></pre></td></tr></table></figure>

<p>修改密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p <span class="string">'pass'</span></span><br><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'pass'</span>;</span><br></pre></td></tr></table></figure>

<p>在初始化之前要先创建Yearning库,字符集应为UTF-8/UTF8mb4</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span>  Yearning <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure>

<h4 id="Yearning下载安装"><a href="#Yearning下载安装" class="headerlink" title="Yearning下载安装"></a>Yearning下载安装</h4><p><a href="https://guide.yearning.io/install.html" target="_blank" rel="noopener">官方参考文档</a>  </p>
<p>Yearning-go提供二进制下载包<br>下载地址 <a href="https://github.com/cookieY/Yearning/releases" target="_blank" rel="noopener">https://github.com/cookieY/Yearning/releases</a><br>请选择最新版本 在Assets中选择 Yearning-x.x.x.linux-amd64.zip 包进行下载<br>如需进行代码修改或自己编译请移步至二次开发页面</p>
<h4 id="Yearning-目录结构"><a href="#Yearning-目录结构" class="headerlink" title="Yearning 目录结构"></a>Yearning 目录结构</h4><p><img src="https://wuchen-1252812685.cos.ap-shanghai.myqcloud.com/img/yearning/15640366699573.jpg" alt></p>
<h5 id="1-填写配置文件"><a href="#1-填写配置文件" class="headerlink" title="1.填写配置文件"></a>1.填写配置文件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat conf.toml</span><br><span class="line">[Mysql]</span><br><span class="line">Db = &quot;Yearning&quot;</span><br><span class="line">Host = &quot;127.0.0.1&quot;</span><br><span class="line">Port = &quot;3306&quot;</span><br><span class="line">Password = &quot;xxxx&quot;</span><br><span class="line">User = &quot;root&quot;</span><br><span class="line"></span><br><span class="line">[General]   #数据库加解密key，只可更改一次。</span><br><span class="line">SecretKey = &quot;dbcjqheupqjsuwsm&quot;</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#####  关于SecretKey</span><br><span class="line"></span><br><span class="line">SecretKey是token/数据库密码加密/解密的salt。</span><br><span class="line">建议所有用户在初次安装Yearning之前将SecretKey更改(不更改将存在安全风险)</span><br><span class="line">格式: 大小写字母均可, 长度必须为16位</span><br><span class="line"></span><br><span class="line">特别注意:</span><br><span class="line">此key仅可在初次安装时更改!之后不可再次更改!如再次更改会导致之前已存放的数据源密码无法解密,最终导致无法获取相关数据源信息  </span><br><span class="line"></span><br><span class="line">#####  使用帮助</span><br></pre></td></tr></table></figure>

<p>./Yearning -h</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](https://wuchen-1252812685.cos.ap-shanghai.myqcloud.com/img/yearning/15640366990306.jpg)</span><br><span class="line"></span><br><span class="line">#####  2.初始化数据结构</span><br></pre></td></tr></table></figure>

<p>./Yearning -m</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](http://q3gm2b4jl.bkt.clouddn.com/png/yearning3.png)</span><br><span class="line"></span><br><span class="line">``如果报错无法连接数据库，本地测试能连接，请检查Yearning库有没有创建``</span><br><span class="line">请务必在-s启动前首先执行-m 初始化操作！</span><br><span class="line">如要再次初始化，请先把yearning表删除，否则重复执行无效</span><br><span class="line"></span><br><span class="line">#####  3.启动服务</span><br><span class="line"></span><br><span class="line">&gt;  默认启动</span><br></pre></td></tr></table></figure>

<p>./Yearning -s</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt; 参数启动</span><br></pre></td></tr></table></figure>

<p>./Yearning -s -b “192.168.1.100” -p “8000”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">打开浏览器 http://192.168.1.100:8000</span><br><span class="line">默认密码：admin/Yearning_admin</span><br><span class="line"></span><br><span class="line">##### 服务更新</span><br><span class="line"></span><br><span class="line">Yearning采用自动表结构同步 无需手动更新表结构。只需替换安装包即可</span><br><span class="line">但如遇 删除字段操作的变动需要执行以下命令。具体是否需要做此操作，请详见相应版本的更新公告(目前该情况只出现于2.1.0以下版本升级到2.1.0以上版本)</span><br></pre></td></tr></table></figure>

<p>./Yearning -x</p>
<pre><code>
####  Yearning 接入LDAP
![](http://q3gm2b4jl.bkt.clouddn.com/png/yearning1.png)

![](http://q3gm2b4jl.bkt.clouddn.com/png/yearning2.png)</code></pre>]]></content>
      <categories>
        <category>DBA</category>
      </categories>
      <tags>
        <tag>Yearning</tag>
      </tags>
  </entry>
  <entry>
    <title>CICD之Jenkins相关</title>
    <url>/CICD%E4%B9%8BJenkins%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h4 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h4><h4 id="Jenkins相关配置"><a href="#Jenkins相关配置" class="headerlink" title="Jenkins相关配置"></a>Jenkins相关配置</h4><ul>
<li>项目配置<a href="https://mr-jieyan.github.io">参考文档</a>  </li>
</ul>
<h4 id="视图分类"><a href="#视图分类" class="headerlink" title="视图分类"></a>视图分类</h4><ul>
<li>常规老架构<ul>
<li>正式、测试、开发</li>
</ul>
</li>
<li>microservice微服务架构<ul>
<li>正式、测试、 开发</li>
</ul>
</li>
</ul>
<h4 id="文件夹命名"><a href="#文件夹命名" class="headerlink" title="文件夹命名"></a>文件夹命名</h4><ul>
<li>项目名+环境：如cdc-test  </li>
</ul>
<h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><ul>
<li>Publish Over SSH</li>
<li>Pipeline（推荐）</li>
<li>Pipeline: GitHub Groovy Libraries（推荐）</li>
<li>Job Import （其他Jenkins实例的任务导入）</li>
<li>NodeJS</li>
<li>Email Extension Plugin（邮件通知配置）<a href="https://www.cnblogs.com/imyalost/p/8781759.html" target="_blank" rel="noopener">参考文档</a></li>
<li>Manage and Assign Roles （用户权限管理，分配账号给开发人员自己部署）<a href="https://mr-jieyan.github.io">参考文档</a></li>
<li>Configuration Slicing Plugin（批量修改配置，如分支，参数化构建的参数）<a href="https://mr-jieyan.github.io">参考文档</a></li>
</ul>
<h4 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h4><ul>
<li>接入ldap<a href="https://mr-jieyan.github.io">参考文档</a></li>
<li>超管账号权限恢复<a href="https://mr-jieyan.github.io">参考文档</a></li>
</ul>
<h4 id="Jenkins管理相关脚本"><a href="#Jenkins管理相关脚本" class="headerlink" title="Jenkins管理相关脚本"></a>Jenkins管理相关脚本</h4><ul>
<li>Jenkins批量复制任务并改名<a href="https://mr-jieyan.github.io">参考文档</a></li>
<li>Jenkins批量修改配置脚本<a href="https://mr-jieyan.github.io">参考文档</a></li>
</ul>
<h4 id="Jenkins相关细节记录"><a href="#Jenkins相关细节记录" class="headerlink" title="Jenkins相关细节记录"></a>Jenkins相关细节记录</h4><ol>
<li>Publish Over SSH插件：远程目录不存在，是会自己创建的！</li>
<li>Publish Over SSH插件： Jenkins的transfers中配置的remote dictionary 这个目录永远是相对你配置ssh server时候的remote-dictionary而言的，相当于根目录就是ssh-server配的那个远程目录</li>
<li>全局变量中的‘’单引号是可以随着变量传递的！’-Xmx2G -Xms2G -Xmn1G’</li>
<li>位置变量加单引号也是可以传递的</li>
<li>定义Jenkins全局环境变量时注意空格（尾部）</li>
<li>经典网络里的所有云版服务，在vpc网络中都是访问不到的，如redis，rds，slb，等等，这个需要在部署vpc服务中需要注意的网络连通性问题！！！</li>
<li>Failed to connect or change directory，jenkins.plugins.publish_over.BapPublisherException: Failed to connect and initialize SSH connection.（这个报错就是ssh连接不上，先排查看一下直接能不能连接上，很有可能是做基线时密码过期了需要修改）</li>
</ol>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>testpictrue</title>
    <url>/testpictrue/</url>
    <content><![CDATA[<h2 id="测试图片功能是否正常"><a href="#测试图片功能是否正常" class="headerlink" title="测试图片功能是否正常"></a>测试图片功能是否正常</h2><p>这个是用来测试图片功能的文章</p>
<p>现在我插入一个七牛云图片<img src="http://q3gm2b4jl.bkt.clouddn.com/png/2.png" alt="七牛云图片"></p>
<p>文章内显示本地相对路径图片<img src="/testpictrue/joker.png" alt></p>
<a id="more"></a>

<p>测试一下是否正常</p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins推荐任务配置</title>
    <url>/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h4 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h4><p>Jenkins安装部署非常简单，rpm包和war的方式都可以，网上教程很多，略过此步骤，目前我们生产环境部署在内网，war包方式，2.138.2版本，能满足目前使用需求，所以未作升级。</p>
<h4 id="Jenkins相关配置"><a href="#Jenkins相关配置" class="headerlink" title="Jenkins相关配置"></a>Jenkins相关配置</h4><p>  之前项目采用的是插件+图形化配置的方式，比如自由风格的job，maven的job之类的，偶尔加一些参数化的配置，比如分支，tag，文本参数，设置Jenkins的环境变量等等，来增加任务配置的灵活性，经过不断的改造实践，最后发现一切由代码控制才是最佳实践，及采用Jenkins的pipeline方式配置任务—依赖基础插件：</p>
<ul>
<li>Pipeline（推荐）</li>
<li>Pipeline: GitHub Groovy Libraries（拉取git的cicd代码进行部署） </li>
</ul>
<p>其他插件视你的pipeline脚本代码而定，比如我们生产环境采用了<code>Publish Over SSH</code>插件进行项目的部署。<br>此方式下，所有job配置都一样，方便进行任务的批量复制，只需要更换任务名即可，如下图：<br><img src="http://q3gm2b4jl.bkt.clouddn.com/png/Jenkins%E4%BB%BB%E5%8A%A1%E9%85%8D%E7%BD%AE.png" alt=" "><br>整体执行流程：<br>git上拉取CICD代码—-执行groovy脚本—–groovy脚本调用插件，读取参数，按步骤进行项目构建即可。<br>如果再考虑长远一点，比如<code>有迁移git的CICD代码或者切换CICD代码分支</code>的需求的话，<code>Repository URL, Branch Specifier, Script Path</code>都可以配置为全局的环境变量，到时候如果有变动只需要修改一次,找到系统管理—系统配置—全局属性—环境变量，按照kv的格式配置即可，注意<code>变量名最后不能有空格</code>，会找不到的，之前我被坑过。<br>CICD代码结构如下：<br><img src="http://q3gm2b4jl.bkt.clouddn.com/png/Jenkins-cicd%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84.png" alt></p>
<p>接下来就是所以的一切，都交给CICD的代码进行控制，调整，扩展等，所有任务的配置，除了任务名之外，都一致，而任务名恰好也控制着项目的一些关键的东西，如分支，环境，项目的jar包名，war包名等等，（CICD代码中对名字进行了截取判断）</p>
<p>因为有用<code>Publish Over SSH</code>插件，所以还需要配置并测试<br><img src="http://q3gm2b4jl.bkt.clouddn.com/png/Jenkins-pliush-ssh.png" alt></p>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>hahaxixihehe</title>
    <url>/hahaxixihehe/</url>
    <content><![CDATA[<p>kdjflskjdflkjsdlgk<br>sdgjskldgjlskdjgl<br>sdjglksjdlgkjsdl<br>djsklgjlskdjglk<br>sjdkgjslkdsldkgjl</p>
]]></content>
      <categories>
        <category>yaya</category>
      </categories>
      <tags>
        <tag>xixi</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World222222222222</title>
    <url>/hello-world222/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start2222222"><a href="#Quick-Start2222222" class="headerlink" title="Quick Start2222222"></a>Quick Start2222222</h2><h3 id="Create-a-new-post222222222"><a href="#Create-a-new-post222222222" class="headerlink" title="Create a new post222222222"></a>Create a new post222222222</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server222222222"><a href="#Run-server222222222" class="headerlink" title="Run server222222222"></a>Run server222222222</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files222222222"><a href="#Generate-static-files222222222" class="headerlink" title="Generate static files222222222"></a>Generate static files222222222</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites22222222222"><a href="#Deploy-to-remote-sites22222222222" class="headerlink" title="Deploy to remote sites22222222222"></a>Deploy to remote sites22222222222</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories-1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>嘻嘻</category>
      </categories>
      <tags>
        <tag>哈哈</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo3.9.0+next6.5.0个人博客</title>
    <url>/haha/</url>
    <content><![CDATA[<p>3.9.0+next6.5.0个人博客</p>
<p>##################################</p>
<p>基线环境准备：（本文基于环境，版本不一致配置会有变化）</p>
<p>hexo 3.9.0 + node v12.14.0 +next 6.5.0  （next 7.4.0以上版本就必须要hexo 4.X才支持了！）</p>
<p>###################################</p>
<p><a href="https://github.com/sgalin/hexo-starter" target="_blank" rel="noopener">https://github.com/sgalin/hexo-starter</a>    hexo 3.9.0版本的相关文件的GitHub地址，这个模板要保存下来啊 太坑了！！！<br>下载下来之后 ，该目录没有hexo，清理缓存之后重新从package.json中安装依赖</p>
<p>这是一个测试的url<a href="https://mr-jieyan.github.io">JieYan blogs</a></p>
<p>这是一个强调符号修改配置文件<code>/etc/resolve.conf</code>  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ni shi yige <span class="string">"代码块"</span>   </span><br><span class="line">java -jar <span class="string">"service.jar"</span></span><br></pre></td></tr></table></figure>

<p>前面这部分就是摘要了。</p>
<a id="more"></a>

<p>这是一个七牛云图片<img src="http://q3gm2b4jl.bkt.clouddn.com/png/1.png" alt="jenkns"></p>
<p><del>hahaxixi</del></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DIR=`dirname <span class="variable">$0</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate blog</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># Deploy</span></span><br><span class="line">hexo deploy</span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># Push hexo code</span></span><br><span class="line">git add .</span><br><span class="line">current_date=`date <span class="string">"+%Y-%m-%d %H:%M:%S"</span>`</span><br><span class="line">git commit -m <span class="string">"Blog updated: <span class="variable">$current_date</span>"</span></span><br><span class="line"></span><br><span class="line">sleep 2</span><br><span class="line">git push </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=====&gt;Finish!&lt;====="</span></span><br></pre></td></tr></table></figure>


<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">print(<span class="string">"Hello, World!"</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>yaya</category>
      </categories>
      <tags>
        <tag>xixi</tag>
      </tags>
  </entry>
</search>
